# frontend/nginx.conf

user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid       /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html index.htm;

        location / {
            try_files $uri $uri/ /index.html;
        }

        # Abilita e configura il reverse proxy per le richieste API
        location /api/ {
            # 'backend' è il nome del servizio backend definito in docker-compose.yml
            # 5001 è la porta su cui il servizio backend Flask è in ascolto DENTRO la rete Docker
            proxy_pass http://backend:5001/; # La barra finale qui è importante!

            # Intestazioni per inoltrare informazioni utili al backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Opzionale: timeout più lunghi se le richieste API possono richiedere tempo
            # proxy_connect_timeout       60s;
            # proxy_send_timeout          60s;
            # proxy_read_timeout          60s;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}